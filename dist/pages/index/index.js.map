{"version":3,"file":"pages/index/index.js","sources":["webpack:///./src/pages/index/index.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/list-row/index.tsx","webpack:///./src/pages/index/index.scss","webpack:///./src/pages/index/index.tsx?17f9","webpack:///./src/pages/layout/list/index.scss","webpack:///./src/pages/layout/list/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, Input, Button, EventProps, Checkbox, Label, CheckboxGroup } from '@tarojs/components'\nimport { InputProps } from \"@tarojs/components/types/Input\"\nimport { CheckboxGroupProps } from '@tarojs/components/types/CheckboxGroup'\nimport List from '../layout/list'\nimport './index.scss'\n\nexport default () => {\n  return (\n    <List />\n  )\n}\n\n// export default () => {\n//   const [newTodoText, setNewTodoText] = useState('')\n//   const [todoList, setTodoList] = useState<{\n//     text: string\n//     isComplete: boolean\n//   }[]>([])\n\n//   const handleInput: InputProps['onInput'] = (e) => {\n//     setNewTodoText(e.detail.value)\n//   }\n\n//   const handleClick: EventProps['onClick'] = () => {\n//     setTodoList(p => [...p, {\n//       text: newTodoText,\n//       isComplete: false\n//     }])\n//     setNewTodoText('')\n//   }\n\n//   const handleCheck: CheckboxGroupProps['onChange'] = (e) => {\n//     console.log('ss', e.detail.value);\n//     setTodoList(p => p.map(item => ({\n//       ...item,\n//       isComplete: e.detail.value.includes(item.text)\n//     })))\n//   }\n\n//   return (\n//     <View>\n//       <View>\n//         <CheckboxGroup onChange={handleCheck}>\n//           {todoList.map(item =>\n//             <View key={item.text}>\n//               <Label className={item.isComplete ? 'complete' : ''}>\n//                 <Checkbox value={item.text} />\n//                 <Text>{item.text}</Text>\n//               </Label>\n//             </View>\n//           )}\n//         </CheckboxGroup>\n//       </View>\n//       <Input value={newTodoText} onInput={handleInput} />\n//       <Button onClick={handleClick} >add todo</Button>\n//     </View>\n//    )\n// }\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useMemo } from 'react'\nimport { Image, Switch, Text, View } from '@tarojs/components'\nimport { CommonEvent, ITouchEvent, CommonEventFunction } from '@tarojs/components/types/common'\nimport classNames from 'classnames'\n\ninterface ListRowProps {\n  title?: string\n  note?: string\n  thumb?: string\n  extraText?: string\n  switchColor?: string\n  disabled?: boolean\n  isSwitch?: boolean\n  bordered?: boolean\n  checked?: boolean\n  arrow?: 'up' | 'down' | 'right'\n  className?: string\n  onClick?: CommonEventFunction\n  onSwitchChange?: CommonEventFunction\n}\n\nexport default function ListRow ({\n  title = '',\n  note = '',\n  thumb = '',\n  extraText = '',\n  arrow,\n  disabled = false,\n  isSwitch = false,\n  checked = false,\n  switchColor = '#6190E8',\n  bordered = true,\n  className,\n  onClick,\n  onSwitchChange\n}: ListRowProps) {\n  const propsTitle = String(title)\n  const propsExtraText = String(extraText)\n\n  const rootClass = useMemo(() => classNames(className, 'ui-list-row', {\n    'ui-list-row--thumb': thumb,\n    'ui-list-row--disabled': disabled,\n    'ui-list-row--no-border': !bordered\n  }), [bordered, className, disabled, thumb])\n\n  const handleClick = (event: ITouchEvent): void => {\n    if (typeof onClick === 'function' && !disabled) {\n      onClick(event)\n    }\n  }\n\n  const handleSwitchClick = (e: CommonEvent): void => {\n    e.stopPropagation()\n  }\n\n  const handleSwitchChange = (event: CommonEvent): void => {\n    if (typeof onSwitchChange === 'function' && !disabled) {\n      onSwitchChange(event)\n    }\n  }\n\n  return (\n    <View className={rootClass} onClick={handleClick}>\n      {thumb && (\n        <View className='ui-list-row-thumb row-thumb'>\n          <Image\n            className='row-thumb__info'\n            mode='scaleToFill'\n            src={thumb}\n          />\n        </View>\n      )}\n      <View className='ui-list-row-content row-content'>\n        <View className='row-content__info'>\n          <View className='row-content__info-title'>{propsTitle}</View>\n          {note && <View className='row-content__info-note'>{note}</View>}\n        </View>\n      </View>\n      <View className='ui-list-row-extra row-extra'>\n        {propsExtraText && <View className='row-extra__info'>{propsExtraText}</View>}\n        {isSwitch && !propsExtraText && (\n          <View className='row-extra__switch' onClick={handleSwitchClick}>\n            <Switch\n              color={switchColor}\n              disabled={disabled}\n              checked={checked}\n              onChange={handleSwitchChange}\n            />\n          </View>\n        )}\n        {arrow && (\n          <View className='row-extra__icon'>\n            <Text\n              className={`at-icon row-extra__icon-arrow at-icon-chevron-${arrow}`}\n            />\n          </View>\n        )}\n      </View>\n    </View>\n  )\n}\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"mp-ui\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {}, config || {}))\n\n","// extracted by mini-css-extract-plugin","import React from 'react'\nimport { View } from '@tarojs/components'\nimport { CommonEvent } from '@tarojs/components/types/common'\nimport ListRow from '../../../components/list-row'\nimport './index.scss'\n\nexport default function ListPage () {\n  const handleSwitchChange = (e: CommonEvent): void => {\n    console.log('onSwitchChange', e)\n  }\n\n  const handleClick = (e: CommonEvent): void => {\n    console.log('onClick', e)\n  }\n\n  return (\n    <View className='page'>\n      <View className='doc-header'>ListRow</View>\n      <View className='doc-body'>\n        <View className='panel'>\n          <View className='panel__title'>基本用法</View>\n          <View className='panel__content'>\n            <View className='example-item'>\n              <ListRow title='标题文字' onClick={handleClick} />\n              <ListRow title='标题文字' arrow='right' />\n              <ListRow title='标题文字' extraText='查看详情' arrow='right' />\n              <ListRow title='禁用状态' disabled extraText='查看详情' />\n            </View>\n          </View>\n        </View>\n\n        <View className='panel'>\n          <View className='panel__title'>带描述信息</View>\n          <View className='panel__content'>\n            <View className='example-item'>\n              <ListRow title='标题文字' note='描述信息' onClick={handleClick} />\n              <ListRow title='标题文字' note='描述信息' arrow='right' />\n              <ListRow\n                arrow='right'\n                note='描述信息'\n                title='我是一个很长很长很长的标题文字'\n                extraText='查看详情查看详情查看详情查看详情'\n              />\n              <ListRow\n                disabled\n                arrow='right'\n                title='我是一个很长很长很长的标题文字'\n                note='禁用状态'\n                extraText='查看详情查看详情查看详情查看详情'\n              />\n            </View>\n          </View>\n        </View>\n\n        <View className='panel'>\n          <View className='panel__title'>带图片</View>\n          <View className='panel__content'>\n            <View className='example-item'>\n              <ListRow\n                title='标题文字'\n                arrow='right'\n                thumb='https://img12.360buyimg.com/jdphoto/s72x72_jfs/t6160/14/2008729947/2754/7d512a86/595c3aeeNa89ddf71.png'\n                onClick={handleClick}\n              />\n              <ListRow\n                title='标题文字'\n                note='描述信息'\n                arrow='right'\n                thumb='http://img10.360buyimg.com/jdphoto/s72x72_jfs/t5872/209/5240187906/2872/8fa98cd/595c3b2aN4155b931.png'\n              />\n              <ListRow\n                title='标题文字'\n                note='描述信息'\n                extraText='查看详情'\n                arrow='right'\n                thumb='http://img12.360buyimg.com/jdphoto/s72x72_jfs/t10660/330/203667368/1672/801735d7/59c85643N31e68303.png'\n              />\n              <ListRow\n                disabled\n                title='标题文字'\n                note='禁用状态'\n                extraText='查看详情'\n                arrow='right'\n                thumb='http://img12.360buyimg.com/jdphoto/s72x72_jfs/t10660/330/203667368/1672/801735d7/59c85643N31e68303.png'\n              />\n            </View>\n          </View>\n        </View>\n\n        <View className='panel'>\n          <View className='panel__title'>带 Switch 按钮</View>\n          <View className='panel__content'>\n            <View className='example-item'>\n              <ListRow\n                isSwitch\n                title='标题文字'\n                onClick={handleClick}\n                onSwitchChange={handleSwitchChange}\n              />\n              <ListRow\n                isSwitch\n                checked\n                title='标题文字'\n                onSwitchChange={handleSwitchChange}\n              />\n              <ListRow\n                isSwitch\n                disabled\n                checked\n                title='禁用状态'\n                onSwitchChange={handleSwitchChange}\n              />\n            </View>\n          </View>\n        </View>\n\n        <View className='panel'>\n          <View className='panel__title'>无边框</View>\n          <View className='panel__content'>\n            <View className='example-item'>\n              <ListRow\n                isSwitch\n                checked\n                title='标题文字'\n                bordered={false}\n                onClick={handleClick}\n                onSwitchChange={handleSwitchChange}\n              />\n              <ListRow\n                title='标题文字'\n                note='描述信息'\n                extraText='查看详情'\n                arrow='right'\n                bordered={false}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    </View>\n  )\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,UAEA;AACA;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAkBA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAEA;AADA;AAQA;;;;;;;;;;;ACpGA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AAaA;;;;A","sourceRoot":""}